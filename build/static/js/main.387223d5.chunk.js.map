{"version":3,"sources":["comps/Navbar.jsx","comps/MainHeader.jsx","comps/Content.jsx","comps/Mainpage.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","activeItem","handleItemClick","e","name","setState","this","Container","Menu","secondary","inverted","Item","active","onClick","position","Search","Component","MainHeader","Image","centered","className","src","Content","props","slider","KeenSlider","slidesPerView","mode","spacing","loop","controls","open","albumurl","title","handleclick","bind","event","i","url","Card","onDragEnter","onDragOver","onDrop","onFileDrop","style","width","window","innerWidth","height","backgroundImage","Description","color","temp","setopen","settings","dots","infinite","centerMode","centerPadding","speed","slidesToShow","slidesToScroll","map","card","Modal","onClose","onOpen","console","log","ReactWebMediaPlayer","audio","thumbnail","id","class","Keenslider","useKeenSlider","sliderRef","ref","Mainpage","href","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.387223d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input, Menu, Container, Search } from \"semantic-ui-react\";\r\n\r\nclass Navbar extends Component {\r\n  state = { activeItem: \"home\" };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <Menu secondary inverted>\r\n          <Menu.Item\r\n            name=\"home\"\r\n            active={activeItem === \"home\"}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name=\"playlists\"\r\n            active={activeItem === \"playlists\"}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name=\"friends\"\r\n            active={activeItem === \"friends\"}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item>\r\n              <Search />\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              name=\"logout\"\r\n              active={activeItem === \"logout\"}\r\n              onClick={this.handleItemClick}\r\n            />\r\n          </Menu.Menu>\r\n        </Menu>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Image, Menu, Container, Search } from \"semantic-ui-react\";\r\n\r\nclass MainHeader extends Component {\r\n  render() {\r\n    return <Image centered className=\"equilizerimg \" src=\"equalizer.png\" />;\r\n  }\r\n}\r\n\r\nexport default MainHeader;\r\n","import { Component } from \"react\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Image,\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Menu,\r\n  Container,\r\n  Modal,\r\n  Card,\r\n} from \"semantic-ui-react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport ReactWebMediaPlayer from \"react-web-media-player\";\r\nimport \"keen-slider/keen-slider.min.css\";\r\nimport KeenSlider from \"keen-slider\";\r\nimport { useKeenSlider } from \"keen-slider/react\";\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      albumurl: \"\",\r\n      title: \"\",\r\n    };\r\n    this.handleclick = this.handleclick.bind(this);\r\n  }\r\n  slider = new KeenSlider(\"#my-keen-slider\", {\r\n    slidesPerView: 6,\r\n    mode: \"free-snap\",\r\n    spacing: 15,\r\n    loop: true,\r\n    centered: true,\r\n    controls: true,\r\n  });\r\n  handleclick(event, i) {\r\n    let url = \"https://picsum.photos/seed/\" + i + \"/1000/1000\";\r\n\r\n    this.setState({ title: \"Chill Day\" + i, albumurl: url, open: true });\r\n  }\r\n\r\n  card(i) {\r\n    let url = \"url(https://picsum.photos/seed/\" + i + \"/200/300)\";\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          onClick={(event) => this.handleclick(event, i)}\r\n          onDragEnter={this.onDragEnter}\r\n          onDragOver={this.onDragOver}\r\n          onDrop={this.onFileDrop}\r\n          style={{\r\n            width: window.innerWidth / 7.5 + \"px\",\r\n            height: window.innerWidth / 7.5 + \"px\",\r\n          }}\r\n        >\r\n          <Card.Content\r\n            style={{\r\n              width: \"auto\",\r\n              height: window.innerWidth / 7 + \"px\",\r\n              backgroundImage: url,\r\n            }}\r\n          >\r\n            <Card.Description style={{ color: \"white\" }}>\r\n              Chill Day {i}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let open = this.state.open;\r\n    let setOpen = this.state.setopen;\r\n    const temp = [1, 2, 3, 4, 5, 6, 7, 8];\r\n    var settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      centerMode: true,\r\n      centerPadding: \"0px\",\r\n      speed: 500,\r\n      slidesToShow: 6,\r\n      slidesToScroll: 1,\r\n    };\r\n\r\n    return (\r\n      <div className=\"cardcontainer\">\r\n        <header2>Play Music</header2>\r\n        <div style={{ height: \"50px\" }}></div>\r\n        <Slider {...settings}>\r\n          {temp.map((i) => (\r\n            <div> {this.card(i)}</div>\r\n          ))}\r\n        </Slider>\r\n        <div style={{ height: \"100px\" }}></div>\r\n        <Slider {...settings}>\r\n          {temp.map((i) => (\r\n            <div> {this.card(i + 10)}</div>\r\n          ))}\r\n        </Slider>\r\n        <div style={{ height: \"100px\" }}></div>\r\n        <Slider {...settings}>\r\n          {temp.map((i) => (\r\n            <div> {this.card(i + 20)}</div>\r\n          ))}\r\n        </Slider>\r\n\r\n        <Modal\r\n          open={open}\r\n          onClose={() => this.setState({ open: false })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          onDragEnter={(e) => console.log(\"d\")}\r\n        >\r\n          <ReactWebMediaPlayer\r\n            title={this.state.title}\r\n            audio=\"chill day.mp3\"\r\n            thumbnail={this.state.albumurl}\r\n          />\r\n        </Modal>\r\n        <div style={{ height: \"50px\" }}></div>\r\n        <div id=\"my-keen-slider\" class=\"keen-slider\">\r\n          {temp.map((i) => (\r\n            <div class=\"keen-slider__slide\" style={{ height: \"195px\" }}>\r\n              {this.card(i)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function Keenslider() {\r\n  const [sliderRef] = useKeenSlider({\r\n    slidesPerView: 5,\r\n    mode: \"free\",\r\n    spacing: 15,\r\n    loop: true,\r\n  });\r\n\r\n  var card = new Content();\r\n\r\n  return <div ref={sliderRef} className=\"keen-slider\"></div>;\r\n}\r\nexport { Content };\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport { Content } from \"./Content\";\r\nimport { Keenslider } from \"./Content\";\r\nimport { Header } from \"semantic-ui-react\";\r\n\r\nfunction Mainpage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <MainHeader />\r\n      <Content />\r\n      <Keenslider />\r\n      <div className=\"musicsource\">\r\n        <h3>Music :</h3>\r\n        <a href=\"https://www.youtube.com/watch?v=3HjG1Y4QpVA\">\r\n          LAKEY INSPIRED - Chill Day\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mainpage;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Mainpage from \"./comps/Mainpage\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App(props) {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Mainpage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}